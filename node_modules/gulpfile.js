
const gulp = require('gulp');
const browserSync = require('browser-sync');
const browserSync=  require ('browser-sync');
const sass = require('gulp-sass');
const { on } = require('gulp');
const { stream } = require('browser-sync');


// SASS TASK 
gulp.task('sass',() => {
    return gulp.src([
        'node_modules/boostrap/scss/booststrap.scss',
        'src/scss/*.scss'
    ])
    .pipe(sass({outputStyle:'compressed'}))  // 
    .pipe(gulp.dest('src/css')) // DESINATION PATH OF SASS TO CSS COVERTION
    .pipe(browserSync.stream());
});
// COPY JS FILE TO SRC FOLDER  PATH
gulp.task('js',()=>{
    return gulp.src([
        'node_modules/bootstrap/dis/js/boostrap.min.js',
        'node_modules/jqrey/dis/jquery.min.js',
        'node_modeules/popper.js/dis/umd/popper.min.js'

        ])
      // DESTINY PATH TO COPY
      .pipe(gulp.dest('src/css'))
      .pipe(browserSync(stream));
});

// SERVER INIT TASK
gulp.task('serve',[sass],()=>{
browserSync.init({
   server:'./src'
  
})
// refresh browser TASK
 gulp.watch([
     'node_modules/bootstarp/scss/bootstrap.scss ',
     'src/scss/*.css'
 ],['sass']);

 gulp.watch('src/*.html').on('change',browserSync.reload);


});

gulp.task('font-awesome',()=>{
    return gulp.src('node_modules/font-awesome/css/font-awesome.min.css')
    .pipe(gulp.dest('src/css'));
});
 
gulp.task('fonts',()=>{
    return gulp.src('node_modules/font-awesome/font/*')
    .pipe(gulp('src/fonts'));

})
gulp.task('default',['js','serve','font-awesome','fonts']);